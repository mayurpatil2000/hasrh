#importing required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
train= pd.read_csv("SalaryData_Train.csv")
test= pd.read_csv("SalaryData_Train.csv")
from sklearn.preprocessing import LabelEncoder
lb = LabelEncoder()
train.education = lb.fit_transform(train.education)
test.education = lb.fit_transform(test.education)
train= pd.get_dummies(train,columns=["workclass","maritalstatus","occupation","relationship","race","sex","native"])
test = pd.get_dummies(test,columns=["workclass","maritalstatus","occupation","relationship","race","sex","native"])
train.Salary.value_counts()

x_train = train.drop("Salary",axis=1)
x_test = test.drop("Salary",axis = 1)
y_train = train.Salary
y_test = test.Salary
#Linear model
from sklearn.svm import SVC
model1 = SVC(kernel="linear",max_iter=100000)
model1.fit(x_train,y_train)
test_pred = model1.predict(x_test)
linear_accuracy = np.mean(y_test == test_pred)
linear_accuracy

# rgf Model
model2 = SVC(kernel="rbf",max_iter=150000)
model2.fit(x_train,y_train)
rbf_pred=model2.predict(x_test)
rbf_accuracy = np.mean(y_test == rbf_pred)
rbf_accuracy

#Poly Model
model3 = SVC(kernel="poly",max_iter=100000)
model3.fit(x_train,y_train)
poly_pred = model3.predict(x_test)
poly_pred = model3.predict(x_test)
poly_accuracy = np.mean(y_test == poly_pred)
poly_accuracy

# Sigmoid Model
model4 = SVC(kernel="sigmoid",max_iter=100000)
model4.fit(x_train,y_train)
sigmoid_pred=model4.predict(x_test)
sig_accuracy = np.mean(y_test == sigmoid_pred)
sig_accuracy

results = pd.DataFrame({"linear_model": linear_accuracy,"rbf_model": rbf_accuracy,"poly_accuracy":poly_accuracy,"sigmoid_accuracy":sig_accuracy},index=["Accuracy"])